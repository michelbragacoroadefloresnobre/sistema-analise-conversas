generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ContextoIdentificado {
  telefone
  hibrido
  whatsApp
  nao_aplicavel
}

enum Classificacao {
  excelente
  bom
  regular
  fraco
  nao_aplicavel
}

model Report {
  id            Int                    @id @default(autoincrement())
  reportDate    String
  type          String
  conversations ConversationAnalysis[]
  createdAt     DateTime               @default(now())
}

model ConversationAnalysis {
  id           Int     @id @default(autoincrement())
  customerId   String
  customerName String
  employeeName String
  protocol     String
  hasSale      Boolean

  ai AiAnalysis?

  reportId Int
  report   Report @relation(fields: [reportId], references: [id], onDelete: Cascade)
}

model AiAnalysis {
  id                    Int                  @id @default(autoincrement())
  contextoIdentificado  ContextoIdentificado
  notaVenda             Float
  notaPosVenda          Float
  justificativaVenda    String               @db.Text
  justificativaPosVenda String               @db.Text
  sensacaoCliente       String               @db.Text

  criteriosFaltantes CriterioFaltante[]

  resumoExecutivo ResumoExecutivo?

  conversationAnalysisId Int                  @unique
  conversationAnalysis   ConversationAnalysis @relation(fields: [conversationAnalysisId], references: [id], onDelete: Cascade)
}

model CriterioFaltante {
  id           Int        @id @default(autoincrement())
  criterio     String     @db.Text
  nota         Float
  AiAnalysis   AiAnalysis @relation(fields: [aiAnalysisId], references: [id])
  aiAnalysisId Int
}

model ResumoExecutivo {
  id              Int           @id @default(autoincrement())
  tipoAtendimento String
  pontoAlto       String        @db.Text
  oportunidade    String        @db.Text
  classificacao   Classificacao

  aiAnalysisId Int        @unique
  aiAnalysis   AiAnalysis @relation(fields: [aiAnalysisId], references: [id], onDelete: Cascade)
}
